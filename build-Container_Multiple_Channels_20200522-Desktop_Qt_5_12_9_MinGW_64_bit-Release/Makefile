#############################################################################
# Makefile for building: Container_Multiple_Channels_20200522
# Generated by qmake (3.1) (Qt 5.12.9)
# Project:  ..\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522.pro
# Template: subdirs
# Command: C:\Qt\Qt5.12.9\5.12.9\mingw73_64\bin\qmake.exe -o Makefile ..\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
#############################################################################

MAKEFILE      = Makefile

EQ            = =

first: make_first
QMAKE         = C:\Qt\Qt5.12.9\5.12.9\mingw73_64\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = C:\Qt\Qt5.12.9\5.12.9\mingw73_64\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = C:\Qt\Qt5.12.9\5.12.9\mingw73_64\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-CaptureUnderlying \
		sub-InrearedLogic_NJSB \
		sub-LicensePlateHCNET \
		sub-LicensePlateWTY \
		sub-ToUploadData \
		sub-DataInterchange \
		sub-DatabaseInsert \
		sub-DatabaseRead \
		sub-ResultsAnalysis \
		sub-InfraredLogic \
		sub-IdentifyImages \
		sub-CaptureImages \
		sub-LogController \
		sub-TheMiddlewareHCNET \
		sub-Main


sub-CaptureUnderlying-qmake_all:  FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd CaptureUnderlying\ && $(MAKE) -f Makefile qmake_all
sub-CaptureUnderlying: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-CaptureUnderlying-make_first: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-CaptureUnderlying-all: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-CaptureUnderlying-clean: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-CaptureUnderlying-distclean: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-CaptureUnderlying-install_subtargets: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-CaptureUnderlying-uninstall_subtargets: FORCE
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-InrearedLogic_NJSB-qmake_all:  FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd InrearedLogic_NJSB\ && $(MAKE) -f Makefile qmake_all
sub-InrearedLogic_NJSB: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-InrearedLogic_NJSB-make_first: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-InrearedLogic_NJSB-all: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-InrearedLogic_NJSB-clean: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-InrearedLogic_NJSB-distclean: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-InrearedLogic_NJSB-install_subtargets: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-InrearedLogic_NJSB-uninstall_subtargets: FORCE
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-LicensePlateHCNET-qmake_all:  FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd LicensePlateHCNET\ && $(MAKE) -f Makefile qmake_all
sub-LicensePlateHCNET: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-LicensePlateHCNET-make_first: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-LicensePlateHCNET-all: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-LicensePlateHCNET-clean: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-LicensePlateHCNET-distclean: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-LicensePlateHCNET-install_subtargets: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-LicensePlateHCNET-uninstall_subtargets: FORCE
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-LicensePlateWTY-qmake_all:  FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd LicensePlateWTY\ && $(MAKE) -f Makefile qmake_all
sub-LicensePlateWTY: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-LicensePlateWTY-make_first: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-LicensePlateWTY-all: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-LicensePlateWTY-clean: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-LicensePlateWTY-distclean: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-LicensePlateWTY-install_subtargets: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-LicensePlateWTY-uninstall_subtargets: FORCE
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-ToUploadData-qmake_all:  FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd ToUploadData\ && $(MAKE) -f Makefile qmake_all
sub-ToUploadData: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-ToUploadData-make_first: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-ToUploadData-all: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-ToUploadData-clean: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-ToUploadData-distclean: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-ToUploadData-install_subtargets: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-ToUploadData-uninstall_subtargets: FORCE
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-DataInterchange-qmake_all:  FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd DataInterchange\ && $(MAKE) -f Makefile qmake_all
sub-DataInterchange: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-DataInterchange-make_first: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-DataInterchange-all: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-DataInterchange-clean: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-DataInterchange-distclean: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-DataInterchange-install_subtargets: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-DataInterchange-uninstall_subtargets: FORCE
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-DatabaseInsert-qmake_all:  FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd DatabaseInsert\ && $(MAKE) -f Makefile qmake_all
sub-DatabaseInsert: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-DatabaseInsert-make_first: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-DatabaseInsert-all: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-DatabaseInsert-clean: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-DatabaseInsert-distclean: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-DatabaseInsert-install_subtargets: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-DatabaseInsert-uninstall_subtargets: FORCE
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-DatabaseRead-qmake_all:  FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd DatabaseRead\ && $(MAKE) -f Makefile qmake_all
sub-DatabaseRead: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-DatabaseRead-make_first: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-DatabaseRead-all: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-DatabaseRead-clean: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-DatabaseRead-distclean: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-DatabaseRead-install_subtargets: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-DatabaseRead-uninstall_subtargets: FORCE
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-ResultsAnalysis-qmake_all:  FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd ResultsAnalysis\ && $(MAKE) -f Makefile qmake_all
sub-ResultsAnalysis: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-ResultsAnalysis-make_first: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-ResultsAnalysis-all: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-ResultsAnalysis-clean: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-ResultsAnalysis-distclean: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-ResultsAnalysis-install_subtargets: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-ResultsAnalysis-uninstall_subtargets: FORCE
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-InfraredLogic-qmake_all:  FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd InfraredLogic\ && $(MAKE) -f Makefile qmake_all
sub-InfraredLogic: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-InfraredLogic-make_first: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-InfraredLogic-all: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-InfraredLogic-clean: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-InfraredLogic-distclean: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-InfraredLogic-install_subtargets: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-InfraredLogic-uninstall_subtargets: FORCE
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-IdentifyImages-qmake_all:  FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd IdentifyImages\ && $(MAKE) -f Makefile qmake_all
sub-IdentifyImages: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-IdentifyImages-make_first: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-IdentifyImages-all: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-IdentifyImages-clean: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-IdentifyImages-distclean: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-IdentifyImages-install_subtargets: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-IdentifyImages-uninstall_subtargets: FORCE
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-CaptureImages-qmake_all:  FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd CaptureImages\ && $(MAKE) -f Makefile qmake_all
sub-CaptureImages: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-CaptureImages-make_first: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-CaptureImages-all: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-CaptureImages-clean: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-CaptureImages-distclean: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-CaptureImages-install_subtargets: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-CaptureImages-uninstall_subtargets: FORCE
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-LogController-qmake_all:  FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd LogController\ && $(MAKE) -f Makefile qmake_all
sub-LogController: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-LogController-make_first: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-LogController-all: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-LogController-clean: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-LogController-distclean: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-LogController-install_subtargets: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-LogController-uninstall_subtargets: FORCE
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-TheMiddlewareHCNET-qmake_all:  FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd TheMiddlewareHCNET\ && $(MAKE) -f Makefile qmake_all
sub-TheMiddlewareHCNET: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-TheMiddlewareHCNET-make_first: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-TheMiddlewareHCNET-all: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-TheMiddlewareHCNET-clean: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-TheMiddlewareHCNET-distclean: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-TheMiddlewareHCNET-install_subtargets: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-TheMiddlewareHCNET-uninstall_subtargets: FORCE
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall
sub-Main-qmake_all:  FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
	cd Main\ && $(MAKE) -f Makefile qmake_all
sub-Main: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile
sub-Main-make_first: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile 
sub-Main-all: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile all
sub-Main-clean: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile clean
sub-Main-distclean: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile distclean
sub-Main-install_subtargets: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile install
sub-Main-uninstall_subtargets: FORCE
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile uninstall

Makefile: ../Container_Multiple_Channels_20200522/Container_Multiple_Channels_20200522.pro C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/win32-g++/qmake.conf C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/spec_pre.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/qdevice.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/device_config.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/sanitize.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/gcc-base.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/g++-base.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/angle.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/windows_vulkan_sdk.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/windows-vulkan.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/g++-win32.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/qconfig.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3danimation.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3danimation_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dcore.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dcore_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dextras.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dextras_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dinput.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dinput_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dlogic.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dlogic_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquick.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquick_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickanimation.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickanimation_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickextras.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickextras_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickinput.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickinput_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickrender.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickrender_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickscene2d.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickscene2d_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3drender.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3drender_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axbase.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axbase_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axcontainer.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axcontainer_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axserver.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axserver_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bluetooth.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bluetooth_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bootstrap_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_charts.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_charts_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_concurrent.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_concurrent_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_core.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_core_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_datavisualization.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_datavisualization_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_dbus.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_dbus_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designer.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designer_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designercomponents_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_edid_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_egl_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_fb_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gamepad.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gamepad_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gui.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gui_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_help.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_help_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_location.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_location_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimedia.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimedia_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimediawidgets.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimediawidgets_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_network.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_network_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_networkauth.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_networkauth_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_nfc.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_nfc_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_opengl.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_opengl_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_openglextensions.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_openglextensions_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_packetprotocol_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioning.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioning_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioningquick.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioningquick_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_printsupport.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_printsupport_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_purchasing.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_purchasing_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qml.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qml_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmldebug_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmldevtools_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmltest.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmltest_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qtmultimediaquicktools_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quick.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quick_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickcontrols2.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickcontrols2_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickparticles_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickshapes_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quicktemplates2.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quicktemplates2_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickwidgets.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickwidgets_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_remoteobjects.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_remoteobjects_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_repparser.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_repparser_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_script.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_script_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scripttools.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scripttools_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scxml.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scxml_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sensors.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sensors_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialbus.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialbus_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialport.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialport_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sql.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sql_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_svg.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_svg_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_testlib.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_testlib_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_texttospeech.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_texttospeech_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_theme_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uiplugin.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uitools.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uitools_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_virtualkeyboard.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_virtualkeyboard_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_vulkan_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_webchannel.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_webchannel_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_websockets.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_websockets_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_widgets.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_widgets_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_windowsuiautomation_support_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_winextras.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_winextras_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xml.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xml_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xmlpatterns.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xmlpatterns_private.pri \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qt_functions.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qt_config.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/win32-g++/qmake.conf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/spec_post.prf \
		.qmake.stash \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exclusive_builds.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/toolchain.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/default_pre.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/default_pre.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/resolve_config.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exclusive_builds_post.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/default_post.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/resources.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qtquickcompiler.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/precompile_header.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/warn_on.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qmake_use.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/file_copies.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/windows.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/testcase_targets.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exceptions.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/yacc.prf \
		C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/lex.prf \
		../Container_Multiple_Channels_20200522/Container_Multiple_Channels_20200522.pro
	$(QMAKE) -o Makefile ..\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522.pro -spec win32-g++ "CONFIG+=qtquickcompiler"
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/spec_pre.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/qdevice.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/device_config.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/sanitize.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/gcc-base.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/g++-base.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/angle.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/windows_vulkan_sdk.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/windows-vulkan.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/common/g++-win32.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/qconfig.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3danimation.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3danimation_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dcore.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dcore_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dextras.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dextras_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dinput.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dinput_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dlogic.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dlogic_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquick.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquick_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickanimation.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickanimation_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickextras.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickextras_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickinput.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickinput_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickrender.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickrender_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickscene2d.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3dquickscene2d_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3drender.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_3drender_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_accessibility_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axbase.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axbase_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axcontainer.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axcontainer_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axserver.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_axserver_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bluetooth.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bluetooth_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_bootstrap_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_charts.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_charts_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_concurrent.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_concurrent_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_core.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_core_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_datavisualization.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_datavisualization_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_dbus.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_dbus_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designer.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designer_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_designercomponents_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_devicediscovery_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_edid_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_egl_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_fb_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_fontdatabase_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gamepad.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gamepad_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gui.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_gui_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_help.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_help_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_location.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_location_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimedia.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimedia_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimediawidgets.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_multimediawidgets_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_network.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_network_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_networkauth.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_networkauth_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_nfc.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_nfc_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_opengl.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_opengl_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_openglextensions.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_openglextensions_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_packetprotocol_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_platformcompositor_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioning.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioning_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioningquick.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_positioningquick_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_printsupport.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_printsupport_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_purchasing.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_purchasing_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qml.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qml_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmldebug_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmldevtools_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmltest.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qmltest_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_qtmultimediaquicktools_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quick.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quick_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickcontrols2.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickcontrols2_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickparticles_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickshapes_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quicktemplates2.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quicktemplates2_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickwidgets.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_quickwidgets_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_remoteobjects.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_remoteobjects_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_repparser.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_repparser_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_script.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_script_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scripttools.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scripttools_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scxml.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_scxml_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sensors.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sensors_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialbus.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialbus_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialport.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_serialport_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sql.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_sql_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_svg.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_svg_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_testlib.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_testlib_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_texttospeech.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_texttospeech_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_theme_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uiplugin.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uitools.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_uitools_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_virtualkeyboard.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_virtualkeyboard_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_vulkan_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_webchannel.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_webchannel_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_websockets.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_websockets_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_widgets.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_widgets_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_windowsuiautomation_support_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_winextras.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_winextras_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xml.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xml_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xmlpatterns.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/modules/qt_lib_xmlpatterns_private.pri:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qt_functions.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qt_config.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/win32-g++/qmake.conf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/spec_post.prf:
.qmake.stash:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exclusive_builds.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/toolchain.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/default_pre.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/default_pre.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/resolve_config.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exclusive_builds_post.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/default_post.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/resources.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qtquickcompiler.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/precompile_header.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/warn_on.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/qmake_use.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/file_copies.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/win32/windows.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/testcase_targets.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/exceptions.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/yacc.prf:
C:/Qt/Qt5.12.9/5.12.9/mingw73_64/mkspecs/features/lex.prf:
../Container_Multiple_Channels_20200522/Container_Multiple_Channels_20200522.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile ..\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522.pro -spec win32-g++ "CONFIG+=qtquickcompiler"

qmake_all: sub-CaptureUnderlying-qmake_all sub-InrearedLogic_NJSB-qmake_all sub-LicensePlateHCNET-qmake_all sub-LicensePlateWTY-qmake_all sub-ToUploadData-qmake_all sub-DataInterchange-qmake_all sub-DatabaseInsert-qmake_all sub-DatabaseRead-qmake_all sub-ResultsAnalysis-qmake_all sub-InfraredLogic-qmake_all sub-IdentifyImages-qmake_all sub-CaptureImages-qmake_all sub-LogController-qmake_all sub-TheMiddlewareHCNET-qmake_all sub-Main-qmake_all FORCE

make_first: sub-CaptureUnderlying-make_first sub-InrearedLogic_NJSB-make_first sub-LicensePlateHCNET-make_first sub-LicensePlateWTY-make_first sub-ToUploadData-make_first sub-DataInterchange-make_first sub-DatabaseInsert-make_first sub-DatabaseRead-make_first sub-ResultsAnalysis-make_first sub-InfraredLogic-make_first sub-IdentifyImages-make_first sub-CaptureImages-make_first sub-LogController-make_first sub-TheMiddlewareHCNET-make_first sub-Main-make_first  FORCE
all: sub-CaptureUnderlying-all sub-InrearedLogic_NJSB-all sub-LicensePlateHCNET-all sub-LicensePlateWTY-all sub-ToUploadData-all sub-DataInterchange-all sub-DatabaseInsert-all sub-DatabaseRead-all sub-ResultsAnalysis-all sub-InfraredLogic-all sub-IdentifyImages-all sub-CaptureImages-all sub-LogController-all sub-TheMiddlewareHCNET-all sub-Main-all  FORCE
clean: sub-CaptureUnderlying-clean sub-InrearedLogic_NJSB-clean sub-LicensePlateHCNET-clean sub-LicensePlateWTY-clean sub-ToUploadData-clean sub-DataInterchange-clean sub-DatabaseInsert-clean sub-DatabaseRead-clean sub-ResultsAnalysis-clean sub-InfraredLogic-clean sub-IdentifyImages-clean sub-CaptureImages-clean sub-LogController-clean sub-TheMiddlewareHCNET-clean sub-Main-clean  FORCE
distclean: sub-CaptureUnderlying-distclean sub-InrearedLogic_NJSB-distclean sub-LicensePlateHCNET-distclean sub-LicensePlateWTY-distclean sub-ToUploadData-distclean sub-DataInterchange-distclean sub-DatabaseInsert-distclean sub-DatabaseRead-distclean sub-ResultsAnalysis-distclean sub-InfraredLogic-distclean sub-IdentifyImages-distclean sub-CaptureImages-distclean sub-LogController-distclean sub-TheMiddlewareHCNET-distclean sub-Main-distclean  FORCE
	-$(DEL_FILE) Makefile
	-$(DEL_FILE) .qmake.stash
install_subtargets: sub-CaptureUnderlying-install_subtargets sub-InrearedLogic_NJSB-install_subtargets sub-LicensePlateHCNET-install_subtargets sub-LicensePlateWTY-install_subtargets sub-ToUploadData-install_subtargets sub-DataInterchange-install_subtargets sub-DatabaseInsert-install_subtargets sub-DatabaseRead-install_subtargets sub-ResultsAnalysis-install_subtargets sub-InfraredLogic-install_subtargets sub-IdentifyImages-install_subtargets sub-CaptureImages-install_subtargets sub-LogController-install_subtargets sub-TheMiddlewareHCNET-install_subtargets sub-Main-install_subtargets FORCE
uninstall_subtargets: sub-CaptureUnderlying-uninstall_subtargets sub-InrearedLogic_NJSB-uninstall_subtargets sub-LicensePlateHCNET-uninstall_subtargets sub-LicensePlateWTY-uninstall_subtargets sub-ToUploadData-uninstall_subtargets sub-DataInterchange-uninstall_subtargets sub-DatabaseInsert-uninstall_subtargets sub-DatabaseRead-uninstall_subtargets sub-ResultsAnalysis-uninstall_subtargets sub-InfraredLogic-uninstall_subtargets sub-IdentifyImages-uninstall_subtargets sub-CaptureImages-uninstall_subtargets sub-LogController-uninstall_subtargets sub-TheMiddlewareHCNET-uninstall_subtargets sub-Main-uninstall_subtargets FORCE

sub-CaptureUnderlying-debug:
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-InrearedLogic_NJSB-debug:
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-LicensePlateHCNET-debug:
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-LicensePlateWTY-debug:
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-ToUploadData-debug:
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-DataInterchange-debug:
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-DatabaseInsert-debug:
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-DatabaseRead-debug:
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-ResultsAnalysis-debug:
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-InfraredLogic-debug:
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-IdentifyImages-debug:
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-CaptureImages-debug:
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-LogController-debug:
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-TheMiddlewareHCNET-debug:
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
sub-Main-debug:
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile debug
debug: sub-CaptureUnderlying-debug sub-InrearedLogic_NJSB-debug sub-LicensePlateHCNET-debug sub-LicensePlateWTY-debug sub-ToUploadData-debug sub-DataInterchange-debug sub-DatabaseInsert-debug sub-DatabaseRead-debug sub-ResultsAnalysis-debug sub-InfraredLogic-debug sub-IdentifyImages-debug sub-CaptureImages-debug sub-LogController-debug sub-TheMiddlewareHCNET-debug sub-Main-debug

sub-CaptureUnderlying-release:
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-InrearedLogic_NJSB-release:
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-LicensePlateHCNET-release:
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-LicensePlateWTY-release:
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-ToUploadData-release:
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-DataInterchange-release:
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-DatabaseInsert-release:
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-DatabaseRead-release:
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-ResultsAnalysis-release:
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-InfraredLogic-release:
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-IdentifyImages-release:
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-CaptureImages-release:
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-LogController-release:
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-TheMiddlewareHCNET-release:
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
sub-Main-release:
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile release
release: sub-CaptureUnderlying-release sub-InrearedLogic_NJSB-release sub-LicensePlateHCNET-release sub-LicensePlateWTY-release sub-ToUploadData-release sub-DataInterchange-release sub-DatabaseInsert-release sub-DatabaseRead-release sub-ResultsAnalysis-release sub-InfraredLogic-release sub-IdentifyImages-release sub-CaptureImages-release sub-LogController-release sub-TheMiddlewareHCNET-release sub-Main-release

sub-CaptureUnderlying-check:
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-InrearedLogic_NJSB-check:
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-LicensePlateHCNET-check:
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-LicensePlateWTY-check:
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-ToUploadData-check:
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-DataInterchange-check:
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-DatabaseInsert-check:
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-DatabaseRead-check:
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-ResultsAnalysis-check:
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-InfraredLogic-check:
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-IdentifyImages-check:
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-CaptureImages-check:
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-LogController-check:
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-TheMiddlewareHCNET-check:
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
sub-Main-check:
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile check
check: sub-CaptureUnderlying-check sub-InrearedLogic_NJSB-check sub-LicensePlateHCNET-check sub-LicensePlateWTY-check sub-ToUploadData-check sub-DataInterchange-check sub-DatabaseInsert-check sub-DatabaseRead-check sub-ResultsAnalysis-check sub-InfraredLogic-check sub-IdentifyImages-check sub-CaptureImages-check sub-LogController-check sub-TheMiddlewareHCNET-check sub-Main-check

sub-CaptureUnderlying-benchmark:
	@if not exist CaptureUnderlying\ mkdir CaptureUnderlying\ & if not exist CaptureUnderlying\ exit 1
	cd CaptureUnderlying\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureUnderlying\CaptureUnderlying.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-InrearedLogic_NJSB-benchmark:
	@if not exist InrearedLogic_NJSB\ mkdir InrearedLogic_NJSB\ & if not exist InrearedLogic_NJSB\ exit 1
	cd InrearedLogic_NJSB\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InrearedLogic_NJSB\InrearedLogic_NJSB.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-LicensePlateHCNET-benchmark:
	@if not exist LicensePlateHCNET\ mkdir LicensePlateHCNET\ & if not exist LicensePlateHCNET\ exit 1
	cd LicensePlateHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateHCNET\LicensePlateHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-LicensePlateWTY-benchmark:
	@if not exist LicensePlateWTY\ mkdir LicensePlateWTY\ & if not exist LicensePlateWTY\ exit 1
	cd LicensePlateWTY\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LicensePlateWTY\LicensePlateWTY.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-ToUploadData-benchmark:
	@if not exist ToUploadData\ mkdir ToUploadData\ & if not exist ToUploadData\ exit 1
	cd ToUploadData\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ToUploadData\ToUploadData.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-DataInterchange-benchmark:
	@if not exist DataInterchange\ mkdir DataInterchange\ & if not exist DataInterchange\ exit 1
	cd DataInterchange\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DataInterchange\DataInterchange.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-DatabaseInsert-benchmark:
	@if not exist DatabaseInsert\ mkdir DatabaseInsert\ & if not exist DatabaseInsert\ exit 1
	cd DatabaseInsert\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseInsert\DatabaseInsert.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-DatabaseRead-benchmark:
	@if not exist DatabaseRead\ mkdir DatabaseRead\ & if not exist DatabaseRead\ exit 1
	cd DatabaseRead\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\DatabaseRead\DatabaseRead.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-ResultsAnalysis-benchmark:
	@if not exist ResultsAnalysis\ mkdir ResultsAnalysis\ & if not exist ResultsAnalysis\ exit 1
	cd ResultsAnalysis\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\ResultsAnalysis\ResultsAnalysis.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-InfraredLogic-benchmark:
	@if not exist InfraredLogic\ mkdir InfraredLogic\ & if not exist InfraredLogic\ exit 1
	cd InfraredLogic\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\InfraredLogic\InfraredLogic.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-IdentifyImages-benchmark:
	@if not exist IdentifyImages\ mkdir IdentifyImages\ & if not exist IdentifyImages\ exit 1
	cd IdentifyImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\IdentifyImages\IdentifyImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-CaptureImages-benchmark:
	@if not exist CaptureImages\ mkdir CaptureImages\ & if not exist CaptureImages\ exit 1
	cd CaptureImages\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\CaptureImages\CaptureImages.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-LogController-benchmark:
	@if not exist LogController\ mkdir LogController\ & if not exist LogController\ exit 1
	cd LogController\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\LogController\LogController.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-TheMiddlewareHCNET-benchmark:
	@if not exist TheMiddlewareHCNET\ mkdir TheMiddlewareHCNET\ & if not exist TheMiddlewareHCNET\ exit 1
	cd TheMiddlewareHCNET\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\TheMiddlewareHCNET\TheMiddlewareHCNET.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
sub-Main-benchmark:
	@if not exist Main\ mkdir Main\ & if not exist Main\ exit 1
	cd Main\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\cc\Documents\Qt\Container_Multiple_Channels_20200522\Container_Multiple_Channels_20200522\Main\Main.pro -spec win32-g++ "CONFIG+=qtquickcompiler" ) && $(MAKE) -f Makefile benchmark
benchmark: sub-CaptureUnderlying-benchmark sub-InrearedLogic_NJSB-benchmark sub-LicensePlateHCNET-benchmark sub-LicensePlateWTY-benchmark sub-ToUploadData-benchmark sub-DataInterchange-benchmark sub-DatabaseInsert-benchmark sub-DatabaseRead-benchmark sub-ResultsAnalysis-benchmark sub-InfraredLogic-benchmark sub-IdentifyImages-benchmark sub-CaptureImages-benchmark sub-LogController-benchmark sub-TheMiddlewareHCNET-benchmark sub-Main-benchmark
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

